<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <GVL Name="Main" Id="{20fb6757-32ec-45e1-84c1-fbcee97a52a0}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
VAR_GLOBAL
(*
    Only includes motor definitions for the IOC
    These are hard-coded to be Main.M#,
    but are very convenient to store in a GVL,
    hence the confusing namespace here

    This should be refactored once the IOC
    supports arbitrary ads paths for motors
*)
    // IM1K0-XTES: 3 Axes
    {attribute 'pytmc' := 'pv: IM1K0:XTES:MMS'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[IM1K0-EL7041]^STM Status^Status^Digital input 1;
                              .bBrakeRelease        := TIIB[IM1K0-EL2004]^Channel 1^Output;
                              .nRawEncoderINT       := TIIB[IM1K0-EL3054]^AI Standard Channel 1^Value'}
    M1: ST_MotionStage := (sName := 'IM1K0:XTES:MMS');
    {attribute 'pytmc' := 'pv: IM1K0:XTES:CLZ'}
    {attribute 'TcLinkTo' := '.bHome                := TIIB[IM1K0-EL1088]^Channel 2^Input;
                              .nRawEncoderUINT      := TIIB[IM1K0-EL5101-01]^ENC Status compact^Counter value'}
    M2: ST_MotionStage := (sName := 'IM1K0:XTES:CLZ');
    {attribute 'pytmc' := 'pv: IM1K0:XTES:CLF'}
    {attribute 'TcLinkTo' := '.bHome                := TIIB[IM1K0-EL1088]^Channel 4^Input;
                              .nRawEncoderUINT      := TIIB[IM1K0-EL5101-01]^ENC Status compact^Counter value'}
    M3: ST_MotionStage := (sName := 'IM1K0:XTES:CLF');

    // IM1K3-PPM: 1 Axis
    {attribute 'pytmc' := 'pv: IM1K3:PPM:MMS'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[IM1K3-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable := TIIB[IM1K3-EL7041]^STM Status^Status^Digital input 2;
                              .bBrakeRelease        := TIIB[IM1K3-EL2004]^Channel 1^Output;
                              .nRawEncoderULINT     := TIIB[IM1K3-EL5042]^FB Inputs Channel 1^Position'}
    M4: ST_MotionStage := (sName := 'IM1K3:PPM:MMS');

    // IM2K0-XTES: 1 Axis, previously 3 but the zoom/focus have been removed
    {attribute 'pytmc' := 'pv: IM2K0:XTES:MMS'}
    {attribute 'TcLinkTo' := '.bBrakeRelease        := TIIB[IM2K0-EL2004]^Channel 1^Output;
                              .nRawEncoderULINT     := TIIB[IM2K0-EL5042]^FB Inputs Channel 1^Position'}
    M5: ST_MotionStage := (sName := 'IM2K0:XTES:MMS');
    {attribute 'pytmc' := 'pv: IM2K0:XTES:CLZ'}
    {attribute 'TcLinkTo' := '.bHome                := TIIB[IM2K0-EL1088]^Channel 2^Input;
                              .nRawEncoderUINT      := TIIB[IM2K0-EL7342]^ENC Status compact Channel 1^Counter value'}
    M6: ST_MotionStage := (sName := 'IM2K0:XTES:CLZ');
    {attribute 'pytmc' := 'pv: IM2K0:XTES:CLF'}
    {attribute 'TcLinkTo' := '.bHome                := TIIB[IM2K0-EL1088]^Channel 4^Input;
                              .nRawEncoderUINT      := TIIB[IM2K0-EL7342]^ENC Status compact Channel 2^Counter value'}
    M7: ST_MotionStage := (sName := 'IM2K0:XTES:CLF');

    // PF1K0-WFS: 2 Axes
    {attribute 'pytmc' := 'pv: PF1K0:WFS:MMS:Y'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[PF1K0-EL7041-01]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable := TIIB[PF1K0-EL7041-01]^STM Status^Status^Digital input 2;
                              .bBrakeRelease        := TIIB[PF1K0-EL2004]^Channel 1^Output;
                              .nRawEncoderULINT     := TIIB[PF1K0-EL5042]^FB Inputs Channel 2^Position'}
    M8: ST_MotionStage := (sName := 'PF1K0:WFS:MMS:Y');
    {attribute 'pytmc' := 'pv: PF1K0:WFS:MMS:Z'}
    {attribute 'TcLinkTo' := '.nRawEncoderULINT     := TIIB[PF1K0-EL5042]^FB Inputs Channel 1^Position'}
    M9: ST_MotionStage := (sName := 'PF1K0:WFS:MMS:Z');

   // RTDSK0: 8 Axes
    M10: ST_MotionStage;
    {attribute 'pytmc' := 'pv: RTDSK0:SCRP:MMS:Z'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[RTDSK0-M2-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable := TIIB[RTDSK0-M2-EL7041]^STM Status^Status^Digital input 2'}
    M11: ST_MotionStage:= (sName := 'RTDSK0:SCRP:MMS:Z');
        {attribute 'pytmc' := 'pv: RTDSK0:SCRP:MMS:X'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[RTDSK0-M3-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable := TIIB[RTDSK0-M3-EL7041]^STM Status^Status^Digital input 2'}
    M12: ST_MotionStage:= (sName := 'RTDSK0:SCRP:MMS:X');
        {attribute 'pytmc' := 'pv: RTDSK0:SCRP:MMS:Y'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[RTDSK0-M4-EL7041]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable := TIIB[RTDSK0-M4-EL7041]^STM Status^Status^Digital input 2'}
    M13: ST_MotionStage:= (sName := 'RTDSK0:SCRP:MMS:Y');
    M14: ST_MotionStage;
    M15: ST_MotionStage;
    M16: ST_MotionStage;
    M17: ST_MotionStage;

    // SL1K0-POWER: 4 Axes
    {attribute 'pytmc' := 'pv: SL1K0:POWER:MMS:SOUTH'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL1K0-EL7041-E1]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL1K0-EL7041-E1]^STM Status^Status^Digital input 1;
                              .nRawEncoderINT       := TIIB[SL1K0-EL3054-E12]^AI Standard Channel 1^Value'}

    M18: ST_MotionStage := (sName := 'SL1K0:POWER:MMS:SOUTH');
    {attribute 'pytmc' := 'pv: SL1K0:POWER:MMS:TOP'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL1K0-EL7041-E2]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL1K0-EL7041-E2]^STM Status^Status^Digital input 1;
                              .nRawEncoderINT       := TIIB[SL1K0-EL3054-E12]^AI Standard Channel 2^Value'}
    M19: ST_MotionStage := (sName := 'SL1K0:POWER:MMS:TOP');
    {attribute 'pytmc' := 'pv: SL1K0:POWER:MMS:NORTH'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL1K0-EL7041-E4]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL1K0-EL7041-E4]^STM Status^Status^Digital input 1;
                              .nRawEncoderINT       := TIIB[SL1K0-EL3054-E12]^AI Standard Channel 3^Value'}
    M20: ST_MotionStage := (sName := 'SL1K0:POWER:MMS:NORTH');
    {attribute 'pytmc' := 'pv: SL1K0:POWER:MMS:BOTTOM'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL1K0-EL7041-E5]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL1K0-EL7041-E5]^STM Status^Status^Digital input 1;
                              .nRawEncoderINT       := TIIB[SL1K0-EL3054-E12]^AI Standard Channel 4^Value'}
    M21: ST_MotionStage := (sName := 'SL1K0:POWER:MMS:BOTTOM');

    // SL2K0-POWER: 4 Axes
    {attribute 'pytmc' := 'pv: SL2K0:POWER:MMS:SOUTH'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL2K0-EL7041-E1]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL2K0-EL7041-E1]^STM Status^Status^Digital input 1;
                              .nRawEncoderUINT      := TIIB[SL2K0-EL5042-E2]^FB Inputs Channel 1^Position'}
    M22: ST_MotionStage := (sName := 'SL2K0:POWER:MMS:SOUTH');
    {attribute 'pytmc' := 'pv: SL2K0:POWER:MMS:TOP'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL2K0-EL7041-E3]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL2K0-EL7041-E3]^STM Status^Status^Digital input 1;
                              .nRawEncoderUINT      := TIIB[SL2K0-EL5042-E2]^FB Inputs Channel 2^Position'}
    M23: ST_MotionStage := (sName := 'SL2K0:POWER:MMS:TOP');
    {attribute 'pytmc' := 'pv: SL2K0:POWER:MMS:NORTH'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL2K0-EL7041-E5]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL2K0-EL7041-E5]^STM Status^Status^Digital input 1;
                              .nRawEncoderUINT      := TIIB[SL2K0-EL5042-E6]^FB Inputs Channel 1^Position'}
    M24: ST_MotionStage := (sName := 'SL2K0:POWER:MMS:NORTH');
    {attribute 'pytmc' := 'pv: SL2K0:POWER:MMS:BOTTOM'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[SL2K0-EL7041-E7]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable := TIIB[SL2K0-EL7041-E7]^STM Status^Status^Digital input 1;
                              .nRawEncoderUINT      := TIIB[SL2K0-EL5042-E6]^FB Inputs Channel 2^Position'}
    M25: ST_MotionStage := (sName := 'SL2K0:POWER:MMS:BOTTOM');

    // AT1K4-SOLID: 4 axes (Z=748)
    (* Important note

        AT1K4 axes were mistakenly wired opposite to other solid attenuators.
        The intended convention is:
            MMS:01 should be the most upstream blade,
            MMS:04 should be the most downstream blade.

        The fix applied here is that the NC axes and temperature sensors are *linked* in reverse.
        In summary:

        Traveler	EPICS	Stage		NC	Location
        Axis 4		MMS:01	fbStage1	26	Upstream
        Axis 3		MMS:02	fbStage2	27
        Axis 2		MMS:03	fbStage3	28
        Axis 1		MMS:04	fbStage4	29	Downstream

    *)
    {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:01'}
    {attribute 'TcLinkTo' := '
        .bLimitForwardEnable  := TIIB[AT1K4-EL7047-04]^STM Status^Status^Digital input 1;
        .bLimitBackwardEnable := TIIB[AT1K4-EL7047-04]^STM Status^Status^Digital input 2;
        .nRawEncoderULINT     := TIIB[AT1K4-EL5042-02]^FB Inputs Channel 2^Position
    '}
    M26: ST_MotionStage := (sName := 'AT1K4:L2SI:MMS:01');

    {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:02'}
    {attribute 'TcLinkTo' := '
        .bLimitForwardEnable  := TIIB[AT1K4-EL7047-03]^STM Status^Status^Digital input 1;
        .bLimitBackwardEnable := TIIB[AT1K4-EL7047-03]^STM Status^Status^Digital input 2;
        .nRawEncoderULINT     := TIIB[AT1K4-EL5042-02]^FB Inputs Channel 1^Position
    '}
    M27: ST_MotionStage := (sName := 'AT1K4:L2SI:MMS:02');

    {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:03'}
    {attribute 'TcLinkTo' := '
        .bLimitForwardEnable  := TIIB[AT1K4-EL7047-02]^STM Status^Status^Digital input 1;
        .bLimitBackwardEnable := TIIB[AT1K4-EL7047-02]^STM Status^Status^Digital input 2;
        .nRawEncoderULINT     := TIIB[AT1K4-EL5042-01]^FB Inputs Channel 2^Position
    '}
    M28: ST_MotionStage := (sName := 'AT1K4:L2SI:MMS:03');

    {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:04'}
    {attribute 'TcLinkTo' := '
        .bLimitForwardEnable  := TIIB[AT1K4-EL7047-01]^STM Status^Status^Digital input 1;
        .bLimitBackwardEnable := TIIB[AT1K4-EL7047-01]^STM Status^Status^Digital input 2;
        .nRawEncoderULINT     := TIIB[AT1K4-EL5042-01]^FB Inputs Channel 1^Position
    '}
    M29: ST_MotionStage := (sName := 'AT1K4:L2SI:MMS:04');

    // IM1K4-XTES: 3 Axes
    {attribute 'pytmc' := 'pv: IM1K4:XTES:MMS'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[IM1K4-EL7041-E1]^STM Status^Status^Digital input 1;
                              .bBrakeRelease        := TIIB[IM1K4-EL2004-E2]^Channel 1^Output;
                              .nRawEncoderULINT     := TIIB[IM1K4-EL5042-E3]^FB Inputs Channel 1^Position'}
    M30: ST_MotionStage := (sName := 'IM1K4:XTES:MMS');
    {attribute 'pytmc' := 'pv: IM1K4:XTES:CLZ'}
    {attribute 'TcLinkTo' := '.bHome                := TIIB[IM1K4-EL1088-E5]^Channel 2^Input;
                              .nRawEncoderUINT     := TIIB[IM1K4-EL7342-E4]^ENC Status compact Channel 1^Counter value'}
    M31: ST_MotionStage := (sName := 'IM1K4:XTES:CLZ');
    {attribute 'pytmc' := 'pv: IM1K4:XTES:CLF'}
    {attribute 'TcLinkTo' := '.bHome := TIIB[IM1K4-EL1088-E5]^Channel 4^Input;
                              .nRawEncoderUINT     := TIIB[IM1K4-EL7342-E4]^ENC Status compact Channel 2^Counter value'}
    M32: ST_MotionStage := (sName := 'IM1K4:XTES:CLF');

    // ST1K4-TEST: 1 Axis
    {attribute 'pytmc' := 'pv: ST1K4:TEST:MMS:01'}
    {attribute 'TcLinkTo' := '.bLimitForwardEnable  := TIIB[ST1K4-EL7041-E4]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable := TIIB[ST1K4-EL7041-E4]^STM Status^Status^Digital input 2;
                              .bBrakeRelease        := TIIB[ST1K4-EL2202-E3]^Channel 1^Output;
                              .nRawEncoderULINT      := TIIB[ST1K4-EL5042-E6]^FB Inputs Channel 1^Position'}
    M33: ST_MotionStage := (sName := 'ST1K4:TEST:MMS:01');
END_VAR]]></Declaration>
  </GVL>
</TcPlcObject>