<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="PRG_3_PMPS_POST" Id="{336c6a08-057c-4abe-b1ea-e25741c63140}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_3_PMPS_POST
VAR
    fbArbiterIO: FB_SubSysToArbiter_IO;
    fb_vetoArbiter_K4: FB_VetoArbiter;
    fb_vetoArbiter_K3: FB_VetoArbiter;
    ff3_ff2_link: FB_FastFault := (i_xAutoReset := TRUE, i_DevName := 'FF3 to FF2 Link', i_Desc := 'This is virtual FF3 fault, Please check the Group 3 faulting device ', i_TypeCode := 16#9999);

    bM1K1_Veto_IN: BOOL;
    bM1K3_Veto_IN: BOOL;
    bM1K3_Veto_OUT: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// create MR1K1 as veto for K4 lines
bM1K1_Veto_IN := NOT PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K1_OUT]
                AND PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K1_IN];
// create MR1K3 as veto for K4 lines
bM1K3_Veto_IN := NOT PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K3_OUT]
                AND PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K3_IN];
// create MR1K3 as veto for IM1K3
bM1K3_Veto_OUT := NOT PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K3_IN]
                 AND PMPS_GVL.stCurrentBeamParameters.aVetoDevices[PMPS.K_Stopper.MR1K3_OUT];




//create a preemptive request from Arbiter 2 in Arbiter 1
fb_vetoArbiter_K4(bVeto:=bM1K1_Veto_IN OR bM1K3_Veto_IN,
                HigherAuthority := GVL.fbArbiter,
                LowerAuthority := GVL.fbArbiter2,
                FFO := GVL.fbFastFaultOutput2);
fb_vetoArbiter_K3(bVeto:=(bM1K1_Veto_IN OR bM1K3_VETO_OUT),
                HigherAuthority := GVL.fbArbiter,
                LowerAuthority := GVL.fbArbiter3,
                FFO := GVL.fbFastFaultOutput3);


GVL.fbFastFaultOutput1.Execute();

GVL.fbFastFaultOutput2.Execute(i_xVeto:=bM1K1_Veto_IN OR bM1K3_Veto_IN);

GVL.fbFastFaultOutput3.Execute(i_xVeto:=(bM1K1_Veto_IN OR bM1K3_Veto_OUT));

fbArbiterIO(
    Arbiter:=GVL.fbArbiter,
    fbFFHWO:=GVL.fbFastFaultOutput1);

ff3_ff2_link(
    io_fbFFHWO := GVL.fbFastFaultOutput2,
    i_xOK := GVL.fbFastFaultOutput3.q_xFastFaultOut);

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>